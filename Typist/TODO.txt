- allow button mnemonics (& in labels) only when Alt is pressed at the same time as the key (NOT: Alt, pause, key)

- avoid the cursor staying in the same place for two consecutive chars (at the beginning of line, after a long line that doesn't fit one more char); if the char has an empty rectangle (zero w/h), that means it's at the end of line, so draw the cursor/error to the right of the prev char, on the same line (leave an empty margin to the right of the form)

- save window position between sessions (instead of always starting centered)

- align error highlight chars better with the rest of the text


* bug for 'Ernest Hemingway.txt' file: when typing "non-fiction" (towards the end of the first paragraph), the "non-" stays on the preceding line (because of the dash)
* pause if minimized
* new program flag: cursorAsVerticalBar (false means underscore char, '_')
* new program flag: allowBackspace
* make Esc switch off PracticeMode
* catch Esc and Backspace keys while NOT in PracticeMode
* Tab chars ('\t') at the beginning of the line should advance the cursor to the first printable char (to be used with Code practice texts, e.g., Haskell or C# source code)
* deal with the end of the imported text (limit the length of the typed text, by blocking keyboard input; avoid exception/crash if the last char is an error)
* display underscore char ('_') separately, as a cursor (don't just append it to TypedText, but use the getRectangle method to position it on the screen)
* error: typing a printable char instead of a newline (show the char at the end of the line, in red)
* retrieve 32 rectangles at a time when displaying all uncorrected errors
*o keep a MissingNewlines property in class TextBuffer; insert all missing newlines before showing TypedText on the screen, so that typed chars will always display on top of the originals (even after typing a printable char for a newline in the original)
